(()=>{"use strict";var __webpack_modules__={677:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Q: () => (/* binding */ getSelects)\n});\n\n;// CONCATENATED MODULE: ./src/components/ApiCryptoCompare.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar ApiCryptoCompare = /*#__PURE__*/function () {\n  function ApiCryptoCompare() {\n    _classCallCheck(this, ApiCryptoCompare);\n  }\n  return _createClass(ApiCryptoCompare, [{\n    key: "getCoinPrice",\n    value: function getCoinPrice(coin, currency) {\n      return fetch("https://min-api.cryptocompare.com/data/price?fsym=".concat(coin, "&tsyms=").concat(currency)).then(this._handleResponse);\n    }\n  }, {\n    key: "_handleResponse",\n    value: function _handleResponse(res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430:".concat(res.status));\n      }\n    }\n  }]);\n}();\n\n;// CONCATENATED MODULE: ./src/components/ApiCryptoRank.js\nfunction ApiCryptoRank_typeof(o) { "@babel/helpers - typeof"; return ApiCryptoRank_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, ApiCryptoRank_typeof(o); }\nfunction ApiCryptoRank_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction ApiCryptoRank_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, ApiCryptoRank_toPropertyKey(descriptor.key), descriptor); } }\nfunction ApiCryptoRank_createClass(Constructor, protoProps, staticProps) { if (protoProps) ApiCryptoRank_defineProperties(Constructor.prototype, protoProps); if (staticProps) ApiCryptoRank_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction ApiCryptoRank_toPropertyKey(t) { var i = ApiCryptoRank_toPrimitive(t, "string"); return "symbol" == ApiCryptoRank_typeof(i) ? i : i + ""; }\nfunction ApiCryptoRank_toPrimitive(t, r) { if ("object" != ApiCryptoRank_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != ApiCryptoRank_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar ApiCryptoRank = /*#__PURE__*/function () {\n  function ApiCryptoRank() {\n    ApiCryptoRank_classCallCheck(this, ApiCryptoRank);\n  }\n  return ApiCryptoRank_createClass(ApiCryptoRank, [{\n    key: "getAllCoins",\n    value: function getAllCoins() {\n      return fetch("https://api.cryptorank.io/v1/currencies?api_key=fe462838ebd400caa596ee3563d4a549e76e831ba7b378491b098497f871").then(this._handleResponse);\n    }\n  }, {\n    key: "_handleResponse",\n    value: function _handleResponse(res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject("\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430:".concat(res.status));\n      }\n    }\n  }]);\n}();\n\n;// CONCATENATED MODULE: ./src/components/Options.js\nfunction Options_typeof(o) { "@babel/helpers - typeof"; return Options_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, Options_typeof(o); }\nfunction Options_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Options_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Options_toPropertyKey(descriptor.key), descriptor); } }\nfunction Options_createClass(Constructor, protoProps, staticProps) { if (protoProps) Options_defineProperties(Constructor.prototype, protoProps); if (staticProps) Options_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Options_toPropertyKey(t) { var i = Options_toPrimitive(t, "string"); return "symbol" == Options_typeof(i) ? i : i + ""; }\nfunction Options_toPrimitive(t, r) { if ("object" != Options_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != Options_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar Options = /*#__PURE__*/function () {\n  function Options(templateSelector, data) {\n    Options_classCallCheck(this, Options);\n    this._templateSelector = templateSelector;\n    this._coin = data.symbol;\n  }\n  return Options_createClass(Options, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      var templeateElements = document.querySelector(this._templateSelector).content;\n      var optionElement = templeateElements.querySelector(".option").cloneNode(true);\n      return optionElement;\n    }\n  }, {\n    key: "createOption",\n    value: function createOption() {\n      this._element = this._getTemplate();\n      this._element.textContent = this._coin;\n      return this._element;\n    }\n  }]);\n}();\n\n;// CONCATENATED MODULE: ./src/components/Section.js\nfunction Section_typeof(o) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, Section_typeof(o); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(t) { var i = Section_toPrimitive(t, "string"); return "symbol" == Section_typeof(i) ? i : i + ""; }\nfunction Section_toPrimitive(t, r) { if ("object" != Section_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != Section_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nvar Section = /*#__PURE__*/function () {\n  function Section(containerSelector) {\n    Section_classCallCheck(this, Section);\n    this._container = document.querySelector(containerSelector);\n  }\n  return Section_createClass(Section, [{\n    key: "addItem",\n    value: function addItem(element) {\n      this._container.prepend(element);\n    }\n  }]);\n}();\n\n;// CONCATENATED MODULE: ./src/components/Converter.js\nfunction Converter_typeof(o) { "@babel/helpers - typeof"; return Converter_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, Converter_typeof(o); }\nfunction Converter_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Converter_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Converter_toPropertyKey(descriptor.key), descriptor); } }\nfunction Converter_createClass(Constructor, protoProps, staticProps) { if (protoProps) Converter_defineProperties(Constructor.prototype, protoProps); if (staticProps) Converter_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Converter_toPropertyKey(t) { var i = Converter_toPrimitive(t, "string"); return "symbol" == Converter_typeof(i) ? i : i + ""; }\nfunction Converter_toPrimitive(t, r) { if ("object" != Converter_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != Converter_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\nvar Converter = /*#__PURE__*/function () {\n  function Converter(data) {\n    Converter_classCallCheck(this, Converter);\n    this._searchContainer = document.querySelector(data.searchContainer);\n    this._searchContainerCurrency = document.querySelector(data.searchContainerCurrency);\n    this._searchInput = this._searchContainer.querySelector(".converter__search-cryptocurrency-input");\n    this._cryptocurrency = document.querySelector(data.cryptocurrency);\n    this._currency = document.querySelector(data.currency);\n  }\n  return Converter_createClass(Converter, [{\n    key: "show\\u0421ourse",\n    value: function showСourse(data, coin) {\n      document.querySelector(".converter__button-inner-text-cryptocurrency").textContent = coin;\n      document.querySelector(".converter__button-inner-text-currency").textContent = Object.keys(data)[0];\n      this._cryptocurrency.value = "1";\n      this._currency.value = Object.values(data)[0];\n      this._converter(data);\n    }\n  }, {\n    key: "_converter",\n    value: function _converter(data) {\n      var cryptocurrencyInput = document.querySelector(".converter__input_type_cryptocurrency");\n      var currencyInput = document.querySelector(".converter__input_type_currency");\n      var courseCoin = Object.values(data)[0];\n      cryptocurrencyInput.addEventListener("input", function () {\n        currencyInput.value = cryptocurrencyInput.value * courseCoin;\n      });\n      currencyInput.addEventListener("input", function () {\n        cryptocurrencyInput.value = currencyInput.value / courseCoin;\n      });\n    }\n    ///////////Открытие и закрытие контейнера с поиском крипты\n  }, {\n    key: "handleShowCryptoCurrencyContainer",\n    value: function handleShowCryptoCurrencyContainer() {\n      var _this = this;\n      document.querySelector(".converter__button-cryptocurrency").addEventListener("click", function () {\n        _this._searchContainer.classList.toggle("converter__search_type_active");\n        _this._handleSendCryptoCurrency();\n      });\n      this._closeOverlay();\n    }\n  }, {\n    key: "handleShowCurrencyContainer",\n    value: function handleShowCurrencyContainer() {\n      var _this2 = this;\n      document.querySelector(".converter__button-currency").addEventListener("click", function () {\n        _this2._searchContainerCurrency.classList.toggle("converter__search_type_active");\n        _this2._handleSendCurrency();\n      });\n      this._closeOverlay();\n    }\n  }, {\n    key: "_closeOverlay",\n    value: function _closeOverlay() {\n      var _this3 = this;\n      window.addEventListener("click", function (e) {\n        // при клике в любом месте окна браузера\n        var target = e.target; // находим элемент, на котором был клик\n        if (!target.closest(".converter__button") && !target.closest(".converter__search-cryptocurrency-input")) {\n          // Метод closest ищет ближайший родительский элемент, подходящий под указанный CSS селектор, при этом сам элемент тоже включается в поиск\n          _this3._searchContainerCurrency.classList.remove("converter__search_type_active");\n          _this3._searchContainer.classList.remove("converter__search_type_active"); // то закрываем окно , удаляя активный класс\n        }\n      });\n    }\n    ////////////Отправить value селектов\n  }, {\n    key: "_selectedCurrency",\n    value: function _selectedCurrency() {\n      var btnCryptoCurrency = document.querySelector(".converter__button-inner-text-cryptocurrency").textContent;\n      getSelects(btnCryptoCurrency, this.textContent);\n    }\n  }, {\n    key: "_handleSendCurrency",\n    value: function _handleSendCurrency() {\n      var _this4 = this;\n      var select = document.querySelector(".converter__currency-select");\n      var optionList = select.querySelectorAll(".option");\n      optionList.forEach(function (i) {\n        i.addEventListener("click", _this4._selectedCurrency);\n      });\n    }\n  }, {\n    key: "_selectedCryptoCurrency",\n    value: function _selectedCryptoCurrency() {\n      var btnCurrency = document.querySelector(".converter__button-inner-text-currency").textContent;\n      getSelects(this.textContent, btnCurrency);\n    }\n  }, {\n    key: "_handleSendCryptoCurrency",\n    value: function _handleSendCryptoCurrency() {\n      var _this5 = this;\n      var select = document.querySelector(".converter__cryptocurrency-select");\n      var optionList = select.querySelectorAll(".option");\n      optionList.forEach(function (i) {\n        i.addEventListener("click", _this5._selectedCryptoCurrency);\n      });\n    }\n    ///////////Обработчик поиска монет\n  }, {\n    key: "handleSearhCoin",\n    value: function handleSearhCoin() {\n      this._searchInput.addEventListener("input", this._searchCoin);\n    }\n  }, {\n    key: "_searchCoin",\n    value: function _searchCoin() {\n      // Функция для выполнения поиска\n      // Получаем значение введенное пользователем\n      var input = document.querySelector(".converter__search-cryptocurrency-input").value.toLowerCase();\n      // Получаем список элементов выбора\n      var select = document.querySelector(".converter__cryptocurrency-select");\n      // Получаем список опций\n      var options = select.querySelectorAll(".option");\n      // Перебираем опции и скрываем те, которые не соответствуют поисковому запросу\n      for (var i = 0; i < options.length; i++) {\n        var txtValue = options[i].textContent.toLocaleLowerCase();\n        if (txtValue.indexOf(input) > -1) {\n          options[i].style.display = "";\n        } else {\n          options[i].style.display = "none";\n        }\n      }\n    }\n  }]);\n}();\n\n;// CONCATENATED MODULE: ./src/pages/index.js\n\n\n\n\n\n\nvar converter = new Converter({\n  searchContainer: ".converter__search-cryptocurrency",\n  searchContainerCurrency: ".converter__search-currency",\n  cryptocurrency: ".converter__input_type_cryptocurrency",\n  currency: ".converter__input_type_currency"\n});\nconverter.handleSearhCoin();\nconverter.handleShowCryptoCurrencyContainer();\nconverter.handleShowCurrencyContainer();\nvar apiCryptoCompare = new ApiCryptoCompare();\n//При загрузке страницы загружаем BTC\napiCryptoCompare.getCoinPrice("BTC", "USD").then(function (data) {\n  converter.showСourse(data, "BTC");\n}).catch(function (err) {\n  console.log("catch: ".concat(err));\n});\n//Отправляем выбранную монету в api\nfunction getSelects(coin, currency) {\n  getCoin(coin, currency);\n}\nfunction getCoin(coin, currency) {\n  apiCryptoCompare.getCoinPrice(coin, currency).then(function (data) {\n    converter.showСourse(data, coin);\n  }).catch(function (err) {\n    console.log("catch: ".concat(err));\n  });\n}\n//Выводим монеты в select\nvar apiCryptoRank = new ApiCryptoRank();\napiCryptoRank.getAllCoins().then(function (coins) {\n  return coins.data.reverse().forEach(function (element) {\n    renderElement(element);\n  });\n}).catch(function (err) {\n  console.log("catch: ".concat(err));\n});\nfunction renderElement(element) {\n  var option = new Options(".template", element);\n  var optionElement = option.createOption();\n  renderOption.addItem(optionElement);\n}\nvar renderOption = new Section(".converter__cryptocurrency-select");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///677\n')}},__webpack_require__={d:(Q,t)=>{for(var e in t)__webpack_require__.o(t,e)&&!__webpack_require__.o(Q,e)&&Object.defineProperty(Q,e,{enumerable:!0,get:t[e]})},o:(Q,t)=>Object.prototype.hasOwnProperty.call(Q,t)},__webpack_exports__={};__webpack_modules__[677](0,__webpack_exports__,__webpack_require__)})();